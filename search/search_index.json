{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"MiniLink API \u00b6 Welcome to the MiniLink API documentation \ud83d\udc4b This project provides a simple URL shortening service backend with authentication, links management, and token-based security. \ud83d\udd11 Authentication & User Management \u00b6 1. Register a New User \u00b6 POST /api/v1/register Register a new user in the system. Request: { \"username\" : \"daddy-o\" , \"fullname\" : \"John Doe\" , \"password\" : \"mypassword123\" } Response (200 OK): { \"id\" : \"1\" , \"username\" : \"daddy-o\" , \"created_at\" : \"2025-08-20T14:22:10Z\" } Errors: 409 Conflict \u2192 User already exists 500 Internal Server Error \u2192 Database or service failure 2. Login (Get Token) \u00b6 POST /api/v1/register Authenticates a user and returns a JWT token for subsequent requests. Request (Form-encoded, not JSON!): username=daddy-o password=mypassword123 Response (200 OK): { \"access_token\" : \"eyJhbGciOiJIUzI1NiIs...\" , \"token_type\" : \"bearer\" } Errors: 401 Unauthorized \u2192 Wrong credentials given 404 Not Found \u2192 User not found 500 Internal Server Error \u2192 Database or service failure 3. Get Current User \u00b6 GET /api/v1/me Returns the profile of the currently authenticated user. Headers: Authorization : Bearer < JWT_TOKEN > Resonse (200 OK): { \"id\" : \"1\" , \"username\" : \"daddy-o\" , \"created_at\" : \"2025-08-20T14:22:10Z\" } Errors: 401 Unauthorized \u2192 Missing or invalid token \u2705 URLs Management (private) \u00b6 Endpoints for managing user short links: create, fetch statistics, list, and delete. 1. Create a Short URL \u00b6 POST /api/v1/shorten Create a new short URL for an authenticated user. Request: { \"original_url\" : \"https://example.com/very/long/url\" , \"custom_alias\" : \"myalias\" , \"single_use\" : false } Response (200 OK): { \"short_url\" : \"http://localhost:8000/myalias\" , \"short_code\" : \"myalias\" , \"created_at\" : \"2025-08-20T14:30:00\" , \"expiration_time\" : \"2025-08-25T12:00:00\" , \"created_by_user\" : \"john\" } Errors: 409 Conflict \u2192 Alias already taken 500 Internal Server Error \u2192 Service unavailable 2. Get Statistics for a Short URL \u00b6 GET api/v1/stats/{short_code} Fetch statistics for a given short URL by its code. Response (200 OK): { \"original_url\" : \"https://example.com/very/long/url\" , \"short_code\" : \"myalias\" , \"clicks\" : 42 } Errors: 404 Not Found \u2192 Short URL is not present 403 Forbidden \u2192 Permission denied 3. List User Short URLs \u00b6 GET api/v1/my/urls Retrieve all short URLs created by the authenticated user. Supports optional filters. Query parameters: limit (int) \u2192 Maximum number of results offset (int) \u2192 Offset for pagination max_clicks (int) \u2192 Maximum required clicks min_clicks (int) \u2192 Minimum required clicks active (bool) \u2192 Filter active links only one_time_only (bool) \u2192 Filter single-use links created_after (str) \u2192 Filter by creation date (after) created_before (str) \u2192 Filter by creation date (before) Response (200 OK): { \"short_urls\" : [ { \"short_url\" : \"http://localhost:8000/myalias\" , \"short_code\" : \"myalias\" , \"created_at\" : \"2025-08-20T14:30:00\" , \"expiration_time\" : \"2025-08-25T12:00:00\" , \"created_by_user\" : \"john\" }, { \"short_url\" : \"http://localhost:8000/abcd123\" , \"short_code\" : \"abcd123\" , \"created_at\" : \"2025-08-20T15:00:00\" , \"expiration_time\" : \"2025-08-21T15:00:00\" , \"created_by_user\" : \"john\" } ] } Errors: 500 Internal Server Error \u2192 Service unavailable 4. Delete a Short URL \u00b6 DELETE api/v1/{short_code} Delete a short URL owned by the authenticated user. Response (200 OK): { \"id\" : \"4\" , \"result\" : \"successfully deleted\" } Errors: 404 Not Found \u2192 Short URL not found \u2705 URLs Management (public) \u00b6 Public endpoints for redirection. 1. Redirect User \u00b6 GET /{short_code} Redirects the client from the short URL to the original destination. Response (307 Temporary Redirect) : redirects to the original URL. Errors: 404 Not Found \u2192 Short URL not found 503 Service Unavailable \u2192 Service unavailable","title":"Home"},{"location":"#minilink-api","text":"Welcome to the MiniLink API documentation \ud83d\udc4b This project provides a simple URL shortening service backend with authentication, links management, and token-based security.","title":"MiniLink API"},{"location":"#authentication-user-management","text":"","title":"\ud83d\udd11 Authentication &amp; User Management"},{"location":"#1-register-a-new-user","text":"POST /api/v1/register Register a new user in the system. Request: { \"username\" : \"daddy-o\" , \"fullname\" : \"John Doe\" , \"password\" : \"mypassword123\" } Response (200 OK): { \"id\" : \"1\" , \"username\" : \"daddy-o\" , \"created_at\" : \"2025-08-20T14:22:10Z\" } Errors: 409 Conflict \u2192 User already exists 500 Internal Server Error \u2192 Database or service failure","title":"1. Register a New User"},{"location":"#2-login-get-token","text":"POST /api/v1/register Authenticates a user and returns a JWT token for subsequent requests. Request (Form-encoded, not JSON!): username=daddy-o password=mypassword123 Response (200 OK): { \"access_token\" : \"eyJhbGciOiJIUzI1NiIs...\" , \"token_type\" : \"bearer\" } Errors: 401 Unauthorized \u2192 Wrong credentials given 404 Not Found \u2192 User not found 500 Internal Server Error \u2192 Database or service failure","title":"2. Login (Get Token)"},{"location":"#3-get-current-user","text":"GET /api/v1/me Returns the profile of the currently authenticated user. Headers: Authorization : Bearer < JWT_TOKEN > Resonse (200 OK): { \"id\" : \"1\" , \"username\" : \"daddy-o\" , \"created_at\" : \"2025-08-20T14:22:10Z\" } Errors: 401 Unauthorized \u2192 Missing or invalid token","title":"3. Get Current User"},{"location":"#urls-management-private","text":"Endpoints for managing user short links: create, fetch statistics, list, and delete.","title":"\u2705 URLs Management (private)"},{"location":"#1-create-a-short-url","text":"POST /api/v1/shorten Create a new short URL for an authenticated user. Request: { \"original_url\" : \"https://example.com/very/long/url\" , \"custom_alias\" : \"myalias\" , \"single_use\" : false } Response (200 OK): { \"short_url\" : \"http://localhost:8000/myalias\" , \"short_code\" : \"myalias\" , \"created_at\" : \"2025-08-20T14:30:00\" , \"expiration_time\" : \"2025-08-25T12:00:00\" , \"created_by_user\" : \"john\" } Errors: 409 Conflict \u2192 Alias already taken 500 Internal Server Error \u2192 Service unavailable","title":"1. Create a Short URL"},{"location":"#2-get-statistics-for-a-short-url","text":"GET api/v1/stats/{short_code} Fetch statistics for a given short URL by its code. Response (200 OK): { \"original_url\" : \"https://example.com/very/long/url\" , \"short_code\" : \"myalias\" , \"clicks\" : 42 } Errors: 404 Not Found \u2192 Short URL is not present 403 Forbidden \u2192 Permission denied","title":"2. Get Statistics for a Short URL"},{"location":"#3-list-user-short-urls","text":"GET api/v1/my/urls Retrieve all short URLs created by the authenticated user. Supports optional filters. Query parameters: limit (int) \u2192 Maximum number of results offset (int) \u2192 Offset for pagination max_clicks (int) \u2192 Maximum required clicks min_clicks (int) \u2192 Minimum required clicks active (bool) \u2192 Filter active links only one_time_only (bool) \u2192 Filter single-use links created_after (str) \u2192 Filter by creation date (after) created_before (str) \u2192 Filter by creation date (before) Response (200 OK): { \"short_urls\" : [ { \"short_url\" : \"http://localhost:8000/myalias\" , \"short_code\" : \"myalias\" , \"created_at\" : \"2025-08-20T14:30:00\" , \"expiration_time\" : \"2025-08-25T12:00:00\" , \"created_by_user\" : \"john\" }, { \"short_url\" : \"http://localhost:8000/abcd123\" , \"short_code\" : \"abcd123\" , \"created_at\" : \"2025-08-20T15:00:00\" , \"expiration_time\" : \"2025-08-21T15:00:00\" , \"created_by_user\" : \"john\" } ] } Errors: 500 Internal Server Error \u2192 Service unavailable","title":"3. List User Short URLs"},{"location":"#4-delete-a-short-url","text":"DELETE api/v1/{short_code} Delete a short URL owned by the authenticated user. Response (200 OK): { \"id\" : \"4\" , \"result\" : \"successfully deleted\" } Errors: 404 Not Found \u2192 Short URL not found","title":"4. Delete a Short URL"},{"location":"#urls-management-public","text":"Public endpoints for redirection.","title":"\u2705 URLs Management (public)"},{"location":"#1-redirect-user","text":"GET /{short_code} Redirects the client from the short URL to the original destination. Response (307 Temporary Redirect) : redirects to the original URL. Errors: 404 Not Found \u2192 Short URL not found 503 Service Unavailable \u2192 Service unavailable","title":"1. Redirect User"}]}